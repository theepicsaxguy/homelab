apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: default-deny
spec:
  description: 'Default deny all ingress/egress traffic unless explicitly allowed'
  endpointSelector: {}
  ingress:
    - fromEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: kube-system
            k8s:k8s-app: kube-apiserver
  egress:
    - toEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: kube-system
            k8s:k8s-app: kube-dns
      toPorts:
        - ports:
            - port: '53'
              protocol: UDP
          rules:
            dns:
              - matchPattern: '*'
    - toCIDRSet:
        - cidr: "10.42.0.0/16"  # Pod CIDR
        - cidr: "10.43.0.0/16"  # Service CIDR
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: allow-system-dns
spec:
  description: 'Allow DNS resolution within the cluster'
  endpointSelector:
    matchLabels: {}
  egress:
    - toEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: kube-system
            k8s:k8s-app: kube-dns
      toPorts:
        - ports:
            - port: '53'
              protocol: UDP
            - port: '53'
              protocol: TCP
          rules:
            dns:
              - matchPattern: '*'
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: allow-monitoring-metrics
spec:
  description: 'Allow Prometheus to scrape metrics from all namespaces'
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  ingress:
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: grafana
            io.kubernetes.pod.namespace: monitoring
      toPorts:
        - ports:
            - port: '9090'
              protocol: TCP
          rules:
            http:
              - method: 'GET'
  egress:
    - toEndpoints:
        - matchLabels: {} # Allow scraping from all namespaces
      toPorts:
        - ports:
            - port: '9090'
              protocol: TCP
            - port: '9100'
              protocol: TCP
            - port: '8080'
              protocol: TCP
          rules:
            http:
              - method: 'GET'
                path: '/metrics'
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-gateway-ingress
  namespace: gateway
spec:
  description: 'Allow Gateway API traffic routing with TLS termination'
  endpointSelector:
    matchLabels:
      io.kubernetes.pod.namespace: gateway
  ingress:
    - fromEntities:
        - world
      toPorts:
        - ports:
            - port: '80'
              protocol: TCP
            - port: '443'
              protocol: TCP
    - fromEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: cert-manager
      toPorts:
        - ports:
            - port: '8443'
              protocol: TCP
          rules:
            http:
              - method: 'POST'
                path: '/.well-known/acme-challenge/*'
  egress:
    - toEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: cert-manager
      toPorts:
        - ports:
            - port: '9402'
              protocol: TCP
