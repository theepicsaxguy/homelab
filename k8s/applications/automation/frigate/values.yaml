# Default values for frigate.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

image:
  # -- Docker registry/repository to pull the image from
  repository: ghcr.io/blakeblackshear/frigate
  # -- Overrides the default tag (appVersion) used in Chart.yaml ([Docker Hub](https://hub.docker.com/r/blakeblackshear/frigate/tags?page=1))
  tag: 0.15.1
  # -- Docker image pull policy
  pullPolicy: IfNotPresent

# -- Docker image pull policy
imagePullSecrets: []

# -- additional ENV variables to set. Prefix with FRIGATE_ to target Frigate configuration values
env:
  # TZ: UTC

# -- set environment variables from Secret(s)
envFromSecrets:
  # secrets are required before `helm install`
  - frigate-rstp-credentials

coral:
  # -- enables the use of a Coral device
  enabled: false
  # -- path on the host to which to mount the Coral device
  hostPath: /dev/bus/usb

gpu:
  nvidia:
    # -- Enables NVIDIA GPU compatibility. Must also use the "amd64nvidia" tagged image
    enabled: false

    # -- Overrides the default runtimeClassName
    runtimeClassName:

# -- declare extra volumes to use for Frigate
extraVolumes: []
# -- declare additional volume mounts
extraVolumeMounts: []

# -- amount of shared memory to use for caching
shmSize: 1Gi

# -- use memory for tmpfs (mounted to /tmp)
tmpfs:
  enabled: true
  sizeLimit: 1Gi

# nameOverride -- Overrides the name of resources
nameOverride: ""

# fullnameOverride -- Overrides the Full Name of resources
fullnameOverride: ""

# -- frigate configuration - see [Docs](https://docs.frigate.video/configuration/index) for more info
config: |
  version: 0.15-1

  # logger:
    # logs:

  mqtt:
      host: mosquitto.mqtt.svc.kube.pc-tips.se
      port: 1883
      topic_prefix: frigate
      client_id: frigate
      user: mqtt_user
      password: '{FRIGATE_MQTT_PASSWORD}'
      stats_interval: 60

  ffmpeg:
  #  hwaccel_args: preset-vaapi
    input_args: preset-rtsp-restream
    output_args:
      record: preset-record-generic-audio-copy

  record: # Record configuration - NOTE: Can be overridden at the camera level
    enabled: true
    retain:
      days: 15 # Number of days to retain recordings regardless of events
      mode: motion # save all recordings segments with any detected motion
    alerts:
      retain:
        days: 30
      pre_capture: 30
      post_capture: 30
    detections:
      retain:
        days: 30
      pre_capture: 30
      post_capture: 30
  audio: # Audio Events Configuration - NOTE: Can be overridden at the camera level
    enabled: false
    listen:
      - alarm
      - scream
      - yell

  detect: # Detect configuration - NOTE: Can be overridden at the camera level
    enabled: false
    fps: 7

  objects: # Object configuration - NOTE: Can be overridden at the camera level
    track:
      - cat
      - dog
      - person

  snapshots: # Configuration for the jpg snapshots written to the clips directory for each event - NOTE: Can be overridden at the camera level
    enabled: true # Enable writing jpg snapshot to /media/frigate/clips
    clean_copy: false # Save a clean PNG copy of the snapshot image
    timestamp: true # Print a timestamp on the snapshots
    bounding_box: true # Draw bounding box on the snapshots

  review: # Review configuration - NOTE: Can be overridden at the camera level
    alerts: # Car/Person only by default
      labels:
        - cat
        - person

  go2rtc:
    streams:
      vagga: #Reolink E1 Pro
        - '{FRIGATE_RTSP_MAIN}'
      vagga_sub:
        - '{FRIGATE_RTSP_SUB}'

  cameras:
    vagga:
      enabled: true
      ui:
        order: 01
      ffmpeg:
        output_args:
          record: preset-record-generic-audio-aac
        inputs:
          # High Resolution Stream - Record
          - path: rtsp://127.0.0.1:8554/vagga
            roles:
              - record
          # Low Resolution Stream - Detection
          - path: rtsp://127.0.0.1:8554/vagga_sub
            roles:
              - detect
              - audio
      review: # Camera override - ignores global settings above
        alerts:
          labels:
            - cat
            - person

      onvif:
        host: 192.168.16.186
        port: 8000
        user: '{FRIGATE_RTSP_USERNAME}'
        password: '{FRIGATE_RTSP_PASSWORD}'

# Probes configuration
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  readiness:
    enabled: true
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  startup:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10

service:
  # -- Type of Service to use
  type: ClusterIP
  # -- Port the Service should communicate on
  port: 5000
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}

  # -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
  loadBalancerIP:

  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  # externalTrafficPolicy: Cluster

  # default IP family to use for the service
  ipFamilyPolicy: SingleStack
  # ipFamilies for service
  ipFamilies: []

ingress:
  # -- Enables the use of an Ingress Controller to front the Service and can provide HTTPS
  enabled: false

persistence:
  data:
    # Data directory is obsolete. Use config and media instead.
    enabled: false
    accessMode: ReadWriteOnce
    size: 10Gi
    skipuninstall: false

  config:
    # -- Enables persistence for the config directory
    enabled: true
    ## frigate data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath

    # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce

    # -- Increased size for SQLite database and config
    size: 300Mi

    # -- Do not delete the pvc upon helm uninstall
    skipuninstall: false

    ## Copy configMap config into volume to make writable
    ## All live changes are lost when pod restarts, but this allows
    ## an easy way to run migrations and edit config, then scrape
    ## it from the API or copy out of the pod and update local helm values
    ephemeralWritableConfigYaml: true

  media:
    # -- Enables persistence for the media directory
    enabled: true
    ## frigate data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath

    # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce

    # -- size/capacity of the PVC
    size: 10Gi

    # -- Do not delete the pvc upon helm uninstall
    skipuninstall: false

# -- Set resource limits/requests for the Pod(s)
resources:
  requests:
    cpu: "512m"
    memory: "512Mi"
  limits:
    cpu: "2000m"
    memory: "1Gi"

# -- Set Frigate Container Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # privileged: true

# -- Set Pod level Security Context
# -- the container level securiy context defined above
# -- will override it for frigate container
podSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # fsGroup: 1000
  # privileged: true

# -- Node Selector configuration
nodeSelector: {}

# -- Node toleration configuration
tolerations: []

# -- Set Pod affinity rules
affinity: {}

# -- Set additonal pod Annotations
podAnnotations: {}

# -- Define extra init containers
extraInitContainers: []
