apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: home-assistant
    app.kubernetes.io/name: home-assistant
  name: home-assistant
  namespace: home-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: home-assistant
      app.kubernetes.io/name: home-assistant
  serviceName: home-assistant
  template:
    metadata:
      annotations:
        checksum/hass-configuration: 41d81c4dd388f2b621ca87786005ab0fccf7bbdc6c9653dd4866983af679c63c
        checksum/init-script: 495e927a6986fb8e0bd38f54c81c5cb25cabad179b8c61e53db1ed6405f8007b
      labels:
        app.kubernetes.io/instance: home-assistant
        app.kubernetes.io/name: home-assistant
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/Stockholm
        image: ghcr.io/home-assistant/home-assistant:2025.6.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 2
        name: home-assistant
        ports:
        - containerPort: 8123
          name: http
          protocol: TCP
        - containerPort: 8124
          name: sia
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext: {}
        startupProbe:
          failureThreshold: 1
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /config
          name: home-assistant
      initContainers:
      - args:
        - |
          git clone https://github.com/sockless-coding/panasonic_cc.git /git/panasonic_cc
          cp -r /git/panasonic_cc/custom_components/panasonic_cc/* /panasonic_cc
          chown -R 1000:1000 /panasonic_cc/*
        command:
        - /bin/sh
        - -c
        image: alpine/git
        name: init-panasonic-cc
        volumeMounts:
        - mountPath: /panasonic_cc
          name: custom-components
      - args:
        - /bin/sh /mnt/init/init.sh
        command:
        - /bin/sh
        - -c
        #env: null
        image: mikefarah/yq:4
        name: setup-config
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /mnt/init/init.sh
          name: init-volume
          subPath: init.sh
        - mountPath: /config-templates
          name: config-volume
        - mountPath: /config
          name: home-assistant
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsUser: 568
      serviceAccountName: home-assistant
      volumes:
      - configMap:
          name: init-script
        name: init-volume
      - configMap:
          name: hass-configuration
        name: config-volume
      - emptyDir: {}
        name: home-assistant
