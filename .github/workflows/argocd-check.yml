name: ArgoCD Validation

on:
  pull_request:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.filter.outputs.should_run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to detect changed files in PRs

      - name: Check for Relevant File Changes
        id: filter
        run: |
          CHANGED_FILES=$(git diff --name-only origin/main | grep -E "kustomization.*|.yaml|.yml" || true)
          
          if [[ -n "$CHANGED_FILES" ]]; then
            echo "✅ Relevant changes detected."
            echo "should_run=true" >> "$GITHUB_ENV"
          else
            echo "⏭️ No relevant changes found. Skipping validation."
            echo "should_run=false" >> "$GITHUB_ENV"
          fi

  validate:
    needs: check-changes
    if: needs.check-changes.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to detect changed files in PRs

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y parallel jq
          
          # Download and install tools with sudo
          sudo curl -Lo /usr/local/bin/kustomize https://github.com/kubernetes-sigs/kustomize/releases/latest/download/kustomize_linux_amd64
          sudo chmod +x /usr/local/bin/kustomize

          sudo curl -Lo /usr/local/bin/kubectl https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl
          sudo chmod +x /usr/local/bin/kubectl

          sudo curl -Lo /usr/local/bin/kubeconform https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64
          sudo chmod +x /usr/local/bin/kubeconform

          sudo curl -Lo /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

          sudo curl -Lo /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo chmod +x /usr/local/bin/argocd

          sudo curl -Lo helm.tar.gz https://get.helm.sh/helm-v3.11.2-linux-amd64.tar.gz
          tar -xzf helm.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/helm
          rm -rf helm.tar.gz linux-amd64

      - name: Set Up ArgoCD Authentication
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
        run: |
          if [[ -z "$ARGOCD_SERVER" || -z "$ARGOCD_TOKEN" ]]; then
            echo "❌ Missing ArgoCD credentials. Skipping ArgoCD checks."
            exit 0
          fi
          echo "🔐 Logging into ArgoCD..."
          argocd login "$ARGOCD_SERVER" --token "$ARGOCD_TOKEN" --grpc-web

      - name: Run ArgoCD Validation Script
        id: validate
        run: |
          bash scripts/validate_argocd.sh | tee output.log
        continue-on-error: true

      - name: Check validation result
        id: check_status
        run: echo "status=$(grep -q '❌' output.log && echo 'failed' || echo 'passed')" >> "$GITHUB_ENV"

      - name: Comment on PR if validation fails
        if: env.status == 'failed'
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: output.log
          comment_tag: argocd-validation