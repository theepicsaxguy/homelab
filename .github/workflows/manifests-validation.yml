name: Validate Kubernetes Manifests

on:
  pull_request:
    paths:
      - 'k8s/**'
      - '.github/workflows/manifests-validation.yml'

permissions:
  contents: read
  pull-requests: read
  security-events: write

jobs:
  validation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        k8s-version: ['1.32.0']
    steps:
      - uses: actions/checkout@v4

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Cache validation tools
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/kubeconform
            ~/.cache/kustomize
          key: ${{ runner.os }}-k8s-tools-${{ hashFiles('k8s/**') }}

      - name: Install kubeconform
        run: |
          curl -L -o kubeconform https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64
          chmod +x kubeconform
          sudo mv kubeconform /usr/local/bin/

      - name: Validate Kubernetes manifests with kubeconform
        run: |
          kubeconform -strict -ignore-missing-schemas -summary -kubernetes-version=${{ matrix.k8s-version }} k8s/**/*.yaml

      - name: Run Trivy vulnerability scanner for manifests
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          scan-ref: 'k8s'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Validate with ArgoCD
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
          argocd admin app manifests --source k8s/ | argocd app diff - --local=k8s/

      - name: Check for configuration drift
        run: |
          if [ -f k8s/current-state.yaml ]; then
            kubectl diff -f k8s/current-state.yaml -f k8s/
          fi
