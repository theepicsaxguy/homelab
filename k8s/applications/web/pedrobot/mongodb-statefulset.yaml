apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: pedro-bot
spec:
  serviceName: 'mongodb'
  replicas: 2
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      initContainers:
        - name: init-replica-set
          image: mongo:8.0
          command:
            - sh
            - -c
            - |
              if [ "$(hostname)" = "mongodb-0" ]; then
                until mongosh --host mongodb-0.mongodb --eval 'db.runCommand({ ping: 1 })' >/dev/null 2>&1; do
                  sleep 2
                done
                mongosh --host mongodb-0.mongodb --eval 'try { rs.initiate({ _id: "rs0", members: [{ _id: 0, host: "mongodb-0.mongodb:27017" }, { _id: 1, host: "mongodb-1.mongodb:27017" }]}) } catch (e) { print(e); }'
              fi
      containers:
        - name: mongodb
          image: mongo:8.0
          command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
          ports:
            - containerPort: 27017
              name: mongo
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1Gi
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: ['ReadWriteOnce']
        storageClassName: longhorn
        resources:
          requests:
            storage: 5Gi
