kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: jellyfin
  namespace: media
spec:
  serviceName: "jellyfin"
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    spec:
     # runtimeClassName: nvidia
   #   affinity:
    #    nodeAffinity:
          # preferredDuringSchedulingIgnoredDuringExecution:
        #    - weight: 1
        #      preference:
           #     matchExpressions:
            #      - key: gpu
             #       operator: In
              #      values:
              #        - "true"
  #    tolerations:
   #     - key: "gpu"
     #     operator: "Equal"
      #    value: "true"
    #      effect: "NoSchedule"
      securityContext:
        runAsNonRoot: true
        runAsUser: 2501
        runAsGroup: 2501
        fsGroup: 2501
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 104]
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: jellyfin
          image: ghcr.io/jellyfin/jellyfin:10.10.7
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ['ALL']
          resources:
            requests:
              cpu: '2000m'
              memory: '2Gi'
            limits:
              cpu: '4000m'
              memory: '5Gi'
              nvidia.com/gpu: 1
          envFrom:
            - configMapRef:
                name: jellyfin-env
          ports:
            - name: http
              containerPort: 8096
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /app/data
            - name: cache
              mountPath: /cache
          livenessProbe:
            httpGet:
              path: /
              port: 8096
            initialDelaySeconds: 20
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8096
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media-share
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: cache
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn"
      resources:
        requests:
          storage: 10Gi
