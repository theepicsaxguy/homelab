apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-web
  namespace: mastodon
  labels:
    app: mastodon-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mastodon-web
  template:
    metadata:
      labels:
        app: mastodon-web
        elasticsearch-client: "true"
    spec:
      securityContext:
        fsGroup: 991
      containers:
        - name: web
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          image: ghcr.io/glitch-soc/mastodon:v4.4.3
          command: ["/bin/bash", "-c", "bundle exec puma -C config/puma.rb"]
          ports:
            - name: http
              containerPort: 3000
          envFrom:
            - secretRef:
                name: mastodon-app-secrets
            - secretRef:
                name: mastodon-db-url
            - configMapRef:
                name: mastodon-core-env
            - configMapRef:
                name: mastodon-db-env
            - configMapRef:
                name: mastodon-cache-env
            - configMapRef:
                name: mastodon-search-env
            - configMapRef:
                name: mastodon-metrics-env
            - configMapRef:
                name: mastodon-features-env
            - configMapRef:
                name: mastodon-network-env
            - configMapRef:
                name: mastodon-storage-env
            - configMapRef:
                name: mastodon-smtp-env
          env:
            - name: DB_SSLMODE
              value: verify-ca
            - name: DB_SSLROOTCERT
              value: /opt/mastodon/.postgresql/root.crt
          volumeMounts:
            - name: db-ca
              mountPath: /opt/mastodon/.postgresql/root.crt
              subPath: ca.crt
            - name: es-ca
              mountPath: /opt/mastodon/.elasticsearch/ca.crt
              subPath: ca.crt
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 24
          resources:
            requests:
              cpu: "1500m"
              memory: "1Gi"
            limits:
              cpu: "2000m"
              memory: "4Gi"
      volumes:
        - name: db-ca
          secret:
            secretName: mastodon-postgresql-ca
            items:
              - key: ca.crt
                path: ca.crt
        - name: es-ca
          secret:
            secretName: mastodon-elastic-ca
            items:
              - key: ca.crt
                path: ca.crt
