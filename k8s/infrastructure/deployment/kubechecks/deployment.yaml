---
# Source: kubechecks/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubechecks
  labels:
    helm.sh/chart: kubechecks-0.5.4
    app.kubernetes.io/name: kubechecks
    app.kubernetes.io/instance: kubechecks
    app.kubernetes.io/version: latest
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/part-of: infrastructure
    dev.pc-tips: deployment
spec:
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubechecks
      app.kubernetes.io/instance: kubechecks
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubechecks
        app.kubernetes.io/instance: kubechecks
        app.kubernetes.io/part-of: infrastructure
        dev.pc-tips: deployment
    spec:
      serviceAccountName: kubechecks
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      dnsPolicy: ClusterFirst
      containers:
        - name: kubechecks
          image: ghcr.io/zapier/kubechecks:latest
          imagePullPolicy: Always
          env:
            - name: KUBECHECKS_ARGOCD_API_SERVER_ADDR
              value: argocd-server.argocd.svc:443
            - name: KUBECHECKS_ARGOCD_API_INSECURE
              value: "true"
            - name: KUBECHECKS_ARGOCD_API_NAMESPACE
              value: argocd
            - name: KUBECHECKS_ARGOCD_REPOSITORY_ENDPOINT
              value: argocd-repo-server.argocd.svc:8081
            - name: KUBECHECKS_ARGOCD_REPOSITORY_INSECURE
              value: "true"
            - name: KUBECHECKS_ARGOCD_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: kubechecks-argocd-token
                  key: argocd-api-token
            - name: KUBECHECKS_VCS_TYPE
              value: github
            - name: KUBECHECKS_VCS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: kubechecks-token
                  key: github_token
            - name: KUBECHECKS_KUBERNETES_TYPE
              value: local
            - name: KUBECHECKS_MONITOR_ALL_APPLICATIONS
              value: "true"
            - name: KUBECHECKS_LOG_LEVEL
              value: debug
            - name: KUBECHECKS_SHOW_DEBUG_INFO
              value: "false"
            - name: KUBECHECKS_ENABLE_KUBECONFORM
              value: "true"
            - name: KUBECHECKS_ENABLE_PREUPGRADE
              value: "true"
            - name: KUBECHECKS_ENABLE_CONFTEST
              value: "false"
            - name: KUBECHECKS_FALLBACK_K8S_VERSION
              value: "1.32.0"
            - name: KUBECHECKS_MAX_CONCURRENT_CHECKS
              value: "32"
            - name: KUBECHECKS_MAX_QUEUE_SIZE
              value: "1024"
            - name: KUBECHECKS_REPLAN_COMMENT_MSG
              value: kubechecks again
            - name: KUBECHECKS_PERSIST_LOG_LEVEL
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /live
              port: 8080
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            failureThreshold: 3