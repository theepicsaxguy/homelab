---
# Source: cilium/templates/spire/server/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-server
  namespace: cilium-spire
  labels:
    app: spire-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spire-server
  serviceName: spire-server
  template:
    metadata:
      labels:
        app: spire-server
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: spire-server
      shareProcessNamespace: true
      containers:
      - name: cilium-init
        image: "docker.io/library/busybox:1.37.0@sha256:a5d0ce49aa801d475da48f8cb163c354ab95cab073cd3c138bd458fc8257fbf1"
        imagePullPolicy: IfNotPresent
        command:
          - /bin/sh
          - -c
          - |
            # shellcheck disable=SC2086
            # shellcheck disable=SC2139
            set -e
            
            echo "Waiting for spire process to start"
            while ! pgrep spire-server > /dev/null; do sleep 5; done
            
            SPIRE_SERVER_ROOT_PATH="/proc/$(pgrep spire-server)/root"
            
            alias spire_server="${SPIRE_SERVER_ROOT_PATH}/opt/spire/bin/spire-server"
            SOCKET_PATH="${SPIRE_SERVER_ROOT_PATH}/tmp/spire-server/private/api.sock"
            SOCKET_FLAG="-socketPath ${SOCKET_PATH}"
            
            echo "Checking spire-server status"
            while ! spire_server entry show ${SOCKET_FLAG} &> /dev/null; do
              echo "Waiting for spire-server to start..."
              sleep 5
            done
            
            echo "Spire Server is up, initializing cilium spire entries..."
            
            AGENT_SPIFFE_ID="spiffe://spiffe.cilium/ns/cilium-spire/sa/spire-agent"
            AGENT_SELECTORS="-selector k8s_psat:agent_ns:cilium-spire -selector k8s_psat:agent_sa:spire-agent"
            CILIUM_AGENT_SPIFFE_ID="spiffe://spiffe.cilium/cilium-agent"
            CILIUM_AGENT_SELECTORS="-selector k8s:ns:kube-system -selector k8s:sa:cilium"
            CILIUM_OPERATOR_SPIFFE_ID="spiffe://spiffe.cilium/cilium-operator"
            CILIUM_OPERATOR_SELECTORS="-selector k8s:ns:kube-system -selector k8s:sa:cilium-operator"
            
            while pgrep spire-server > /dev/null;
            do
              echo "Ensuring agent entry"
              if spire_server entry show ${SOCKET_FLAG} -spiffeID $AGENT_SPIFFE_ID $AGENT_SELECTORS | grep -q "Found 0 entries" &> /dev/null; then
                spire_server entry create ${SOCKET_FLAG} -spiffeID $AGENT_SPIFFE_ID $AGENT_SELECTORS -node
              fi
            
              echo "Ensuring cilium-agent entry (required for the delegated identity to work)"
              if spire_server entry show ${SOCKET_FLAG} -spiffeID $CILIUM_AGENT_SPIFFE_ID $CILIUM_AGENT_SELECTORS | grep -q "Found 0 entries" &> /dev/null; then
                spire_server entry create ${SOCKET_FLAG} -spiffeID $CILIUM_AGENT_SPIFFE_ID -parentID $AGENT_SPIFFE_ID $CILIUM_AGENT_SELECTORS
              fi
            
              echo "Ensuring cilium-operator entry (required for creating SPIFFE identities)"
              if spire_server entry show ${SOCKET_FLAG} -spiffeID $CILIUM_OPERATOR_SPIFFE_ID $CILIUM_OPERATOR_SELECTORS | grep -q "Found 0 entries" &> /dev/null; then
                spire_server entry create ${SOCKET_FLAG} -spiffeID $CILIUM_OPERATOR_SPIFFE_ID -parentID $AGENT_SPIFFE_ID $CILIUM_OPERATOR_SELECTORS
              fi
            
              echo "Cilium Spire entries are initialized successfully or already in-sync"
              sleep 30;
            done
            
      - name: spire-server
        image: "ghcr.io/spiffe/spire-server:1.9.6@sha256:59a0b92b39773515e25e68a46c40d3b931b9c1860bc445a79ceb45a805cab8b4"
        imagePullPolicy: IfNotPresent
        args:
        - -config
        - /run/spire/config/server.conf        
        ports:
        - name: grpc
          containerPort: 8081
        volumeMounts:
        - name: spire-config
          mountPath: /run/spire/config
          readOnly: true
        - name: spire-data
          mountPath: /run/spire/data
          readOnly: false
        - name: spire-server-socket
          mountPath: /tmp/spire-server/private
          readOnly: false
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
          failureThreshold: 2
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: spire-config
        configMap:
          name: spire-server
      - name: spire-server-socket
        hostPath:
          path: /var/run/spire-server/sockets
          type: DirectoryOrCreate
  volumeClaimTemplates:
  - metadata:
      name: spire-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: longhorn
