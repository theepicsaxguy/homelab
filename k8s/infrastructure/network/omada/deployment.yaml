apiVersion: apps/v1
kind: Deployment
metadata:
  name: omada-controller
  namespace: omada
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: omada-controller
  template:
    metadata:
      labels:
        app: omada-controller
    spec:
      securityContext:
        runAsUser: 508
        runAsGroup: 508
        runAsNonRoot: true
        fsGroup: 508
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: omada-controller
        image: mbentley/omada-controller:5.15
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
        resources:
          requests: {cpu: 100m, memory: 512Mi}
          limits:   {cpu: 500m, memory: 1Gi}
        env:
        - {name: ROOTLESS,              value: "true"}
        - {name: MANAGE_HTTP_PORT,      value: "8088"}
        - {name: MANAGE_HTTPS_PORT,     value: "8043"}
        - {name: PORTAL_HTTP_PORT,      value: "8088"}
        - {name: PORTAL_HTTPS_PORT,     value: "8843"}
        - {name: TZ,                    value: Etc/UTC}
        - {name: SKIP_USERMOD,          value: "true"}
        volumeMounts:
        - {name: omada-data, mountPath: /opt/tplink/EAPController/data}
        - {name: omada-logs, mountPath: /opt/tplink/EAPController/logs}
        - {name: omada-cert, mountPath: /cert, readOnly: true}
      - name: envoy-sidecar
        image: envoyproxy/envoy:v1.34-latest
        args: ["-c", "/etc/envoy/envoy.yaml"]
        ports:
        - {containerPort: 8080}
        volumeMounts:
        - {name: envoy-config, mountPath: /etc/envoy}
      volumes:
      - {name: omada-data, persistentVolumeClaim: {claimName: omada-data-pvc}}
      - {name: omada-logs, persistentVolumeClaim: {claimName: omada-logs-pvc}}
      - {name: omada-cert, secret: {secretName: cert-omada}}
      - {name: envoy-config, configMap: {name: envoy-config}}
      restartPolicy: Always