csi:
  attacherReplicaCount: 3
  provisionerReplicaCount: 3
  resizerReplicaCount: 3
  snapshotterReplicaCount: 3
  kubeletRootDir: /var/lib/kubelet
  plugin:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
  provisioner:
    resources:
      requests:
        cpu: 55m
        memory: 68Mi
      limits:
        cpu: 55m
        memory: 68Mi
  attacher:
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 50m
        memory: 64Mi
  resizer:
    resources:
      requests:
        cpu: 45m
        memory: 60Mi
      limits:
        cpu: 45m
        memory: 60Mi
  snapshotter:
    resources:
      requests:
        cpu: 60m
        memory: 70Mi
      limits:
        cpu: 60m
        memory: 70Mi
defaultBackupStore:
  backupTarget: 's3://longhorn@us-west-1/'
  backupTargetCredentialSecret: longhorn-minio-credentials
  pollInterval: 180
defaultSettings:
  createDefaultDiskLabeledNodes: true
  defaultReplicaCount: 3
  guaranteedEngineManagerCPU: 0.2
  guaranteedReplicaManagerCPU: 0.2
  storageOverProvisioningPercentage: 200
  storageMinimalAvailablePercentage: 10
  taintToleration: 'true'
  defaultDataPath: /var/lib/longhorn/
  autoDeletePodWhenVolumeDetachedUnexpectedly: true
  autoSalvage: true
  replicaZoneSoftAntiAffinity: false
  concurrentReplicaRebuildPerNodeLimit: 1
  replicaReplenishmentWaitInterval: 600
  backupstorePollInterval: 300
  replicaSoftAntiAffinity: false
persistence:
  defaultClass: true
  defaultClassReplicaCount: 3
  reclaimPolicy: Delete
  defaultFsType: ext4
  snapshotMaxCount: 60
  defaultDataLocality: best-effort

resources:
  requests:
    cpu: 50m
    memory: 64Mi
  limits:
    cpu: 100m
    memory: 128Mi

service:
  ui:
    type: LoadBalancer

longhornManager:
  priorityClass: system-cluster-critical
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 250m
      memory: 256Mi

longhornDriver:
  priorityClass: system-cluster-critical

preUpgradeChecker:
  jobEnabled: false

metrics:
  serviceMonitor:
    enabled: true
    additionalLabels: {}
    annotations: {}
    interval: '30s'
    scrapeTimeout: '10s'
    relabelings: []
    metricRelabelings: []
# ---
# PodSecurityContext/PodSecurity Admission Compliance
# The Longhorn Helm chart does not expose direct securityContext fields for DaemonSet/Jobs.
# To enforce PodSecurity restricted baseline, use a Helm post-render patch or Kustomize overlay.
# Example Kustomize patch (apply in overlays/longhorn):
#
# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: longhorn-manager
#   namespace: longhorn-system
# spec:
#   template:
#     spec:
#       containers:
#         - name: longhorn-manager
#           securityContext:
#             runAsNonRoot: true
#             allowPrivilegeEscalation: false
#             seccompProfile:
#               type: RuntimeDefault
#             capabilities:
#               drop: ["ALL"]
#
# Repeat for any Job templates as needed.
#
# This is a best-practice deviation due to Helm chart limitations. Track for future chart updates.
