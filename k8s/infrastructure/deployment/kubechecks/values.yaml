# Labels to apply to all resources created by this Helm chart
argocd:
  namespace: argocd

commonLabels: {}

configMap:
  create: false
  env: {}
  # KUBECHECKS_ADDITIONAL_APPS_NAMESPACES: "*"
  # KUBECHECKS_ARGOCD_API_INSECURE: "false"
  # KUBECHECKS_ARGOCD_API_PATH_PREFIX: /
  # KUBECHECKS_ARGOCD_API_NAMESPACE: argocd
  # KUBECHECKS_ARGOCD_WEBHOOK_URL: https://argocd.<domain.com>/api/webhook
  # KUBECHECKS_FALLBACK_K8S_VERSION: "1.22.0"
  # KUBECHECKS_LOG_LEVEL: debug
  # KUBECHECKS_NAMESPACE: kubechecks
  # KUBECHECKS_WEBHOOK_URL_BASE: https://kubechecks.<domain.com>.
  # KUBECHECKS_WEBHOOK_URL_PREFIX: kubechecks
  # KUBECHECKS_ARGOCD_API_SERVER_ADDR: argocd.<domain.com>
  # ARGOCD_EXEC_TIMEOUT: 600s
  # KUBECHECKS_OTEL_COLLECTOR_PORT: "4317"
  # KUBECHECKS_OTEL_ENABLED: "true"
  # KUBECHECKS_TIDY_OUTDATED_COMMENTS_MODE: "hide" # other options: delete

deployment:
  env:
    - name: KUBECHECKS_VCS_TYPE
      value: "github"
    - name: KUBECHECKS_VCS_TOKEN
      valueFrom:
        secretKeyRef:
          name: github-token
          key: github_token
    - name: KUBECHECKS_ARGOCD_API_TOKEN
      valueFrom:
        secretKeyRef:
          name: argocd-token
          key: argocd-api-token
  annotations: {}
  podAnnotations: {}
  args: []
  resources:
    limits:
      memory: 512Mi
    requests:
      memory: 256Mi
      cpu: 200m
  revisionHistoryLimit: 10
  replicaCount: 1
  image:
    pullPolicy: Always
    name: "ghcr.io/zapier/kubechecks"
    tag: "latest"
  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}
  envFrom: []
  startupProbe:
    failureThreshold: 30
    periodSeconds: 10
  livenessProbe:
    failureThreshold: 30
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  readinessProbe:
    failureThreshold: 30
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  volumes: []
  volumeMounts: []

secrets:
  create: false

serviceAccount:
  create: true
  enabled: true
  name: '{{ include "kubechecks.fullname" . }}'
  annotations: {}

service:
  create: true
  type: ClusterIP
  port: 8080
  name: http

ingress:
  create: false
  className: ""
  hosts:
    kubechecks.local:
      paths:
        - path: "/hooks"
          pathType: Prefix

autoscaling:
  create: false