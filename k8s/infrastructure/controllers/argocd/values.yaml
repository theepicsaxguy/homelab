# https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml
configs:
  cm:
    create: true
    application.resourceTrackingMethod: annotation+label
    admin.enabled: true
    url: https://argocd.kube.pc-tips.se
    # oidc.config: |
    #   name: 'Authelia'
    #   issuer: 'https://authelia.kube.pc-tips.se'
    #   clientID: 'argocd'
    #   clientSecret: $oidc:authelia.clientSecret
    #   cliClientID: 'argocd-cli'
    #   requestedScopes: [ 'openid', 'profile', 'email', 'groups', 'offline_access' ]
  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: [sh, -c]
          args: [kustomize build --enable-helm]
  params:
    controller.diff.server.side: true
    server.insecure: true
  rbac:
    policy.csv: |
      g, argocd:admin, role:admin
      g, argocd:read_all, role:readonly

crds:
  install: true
  # -- Keep CRDs on chart uninstall
  keep: false

controller:
  resources:
    requests:
      cpu: 100m
      memory: 700Mi
    limits:
      memory: 4Gi
  env:
    - name: REDIS_PASSWORD
      valueFrom:
        secretKeyRef:
          name: argocd-redis
          key: auth
    - name: REDISCLI_AUTH
      valueFrom:
        secretKeyRef:
          name: argocd-redis
          key: auth

dex:
  enabled: false
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      memory: 128Mi

redis:
  enabled: true
  name: redis
  image:
    repository: public.ecr.aws/docker/library/redis
    tag: 7.4.2-alpine
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      memory: 1Gi
  auth:
    enabled: true
  config:
    save: '""' # Disable persistence
  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  service:
    port: 6379
  servicePort: 6379

# Global settings that affect all components
global:
  image:
    tag: 'v2.9.3'

server:
  service:
    type: LoadBalancer
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      memory: 1Gi
  env:
    - name: REDISCLI_AUTH
      valueFrom:
        secretKeyRef:
          name: argocd-redis
          key: auth

repoServer:
  containerSecurityContext:
    readOnlyRootFilesystem: true
  volumes:
    - name: cmp-kustomize-build-with-helm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      memory: 2Gi
  # Removed extraEnv to avoid duplicate REDIS_PASSWORD and REDISCLI_AUTH

  extraContainers:
    - name: kustomize-build-with-helm
      command:
        - argocd-cmp-server
      image: '{{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop: [ALL]
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-kustomize-build-with-helm
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build-with-helm.yaml
        - mountPath: /tmp
          name: cmp-tmp

applicationSet:
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      memory: 1Gi
  # Removed env to avoid duplicate REDIS_PASSWORD and REDISCLI_AUTH

notifications:
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 128Mi
