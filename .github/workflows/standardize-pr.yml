name: Standardize Pull Request

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  standardize-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0

      - name: Standardize PR title
        id: semantic-pr-title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject must start with a lowercase letter
          wip: true
        continue-on-error: true

      - name: Update PR title if needed
        if: steps.semantic-pr-title.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            try {
              const title = context.payload.pull_request.title;
              let type = 'fix';
              if (title.match(/feat|feature|add/i)) type = 'feat';
              else if (title.match(/doc|docs|documentation/i)) type = 'docs';
              else if (title.match(/style|format/i)) type = 'style';
              else if (title.match(/refactor/i)) type = 'refactor';
              
              let scope = '';
              if (title.match(/k8s|kubernetes/i)) scope = '(k8s)';
              else if (title.match(/ci|workflow/i)) scope = '(ci)';
              
              const newTitle = `${type}${scope}: ${title.replace(/^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?:\s*/, '')}`;
              
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                title: newTitle
              });
            } catch (error) {
              core.setFailed(`Failed to update PR title: ${error.message}`);
            }
